package com.sbm.mc.domain;

import java.util.Random;
import java.util.UUID;
import java.util.concurrent.atomic.AtomicInteger;
import java.util.concurrent.atomic.AtomicLong;

public class ReservationDailyElementsTestSamples {

    private static final Random random = new Random();
    private static final AtomicLong longCount = new AtomicLong(random.nextInt() + (2 * Integer.MAX_VALUE));
    private static final AtomicInteger intCount = new AtomicInteger(random.nextInt() + (2 * Short.MAX_VALUE));

    public static ReservationDailyElements getReservationDailyElementsSample1() {
        return new ReservationDailyElements()
            .id(1L)
            .resort("resort1")
            .resvDailyElSeq(1)
            .resvStatus("resvStatus1")
            .externalReference("externalReference1")
            .roomClass("roomClass1")
            .roomCategory("roomCategory1")
            .bookedRoomCategory("bookedRoomCategory1")
            .room("room1")
            .cancellationNo(1)
            .cancellationCode("cancellationCode1")
            .cancellationReasonDesc("cancellationReasonDesc1")
            .guaranteeCode("guaranteeCode1")
            .marketCode("marketCode1")
            .originOfBooking("originOfBooking1")
            .exchangeRate(1)
            .originalBaseRate(1)
            .baseRateAmount(1)
            .rateAmount(1)
            .roomCost(1)
            .quantity(1)
            .adults(1)
            .children(1)
            .physicalQuantity(1)
            .allotmentHeaderId(1)
            .dayUseYn("dayUseYn1")
            .dueOutYn("dueOutYn1")
            .insertUser(1)
            .updateUser(1)
            .insertActionInstanceId(1)
            .dmlSeqNo(1)
            .extSeqNo(1)
            .extSegNo(1)
            .cribs(1)
            .extraBeds(1)
            .allotmentRecordType("allotmentRecordType1")
            .blockResort("blockResort1")
            .blockId(1)
            .turndownStatus("turndownStatus1")
            .awdUpgrFrom("awdUpgrFrom1")
            .awdUpgrTo("awdUpgrTo1")
            .hkExpectedServiceTime("hkExpectedServiceTime1")
            .roomInstructions("roomInstructions1");
    }

    public static ReservationDailyElements getReservationDailyElementsSample2() {
        return new ReservationDailyElements()
            .id(2L)
            .resort("resort2")
            .resvDailyElSeq(2)
            .resvStatus("resvStatus2")
            .externalReference("externalReference2")
            .roomClass("roomClass2")
            .roomCategory("roomCategory2")
            .bookedRoomCategory("bookedRoomCategory2")
            .room("room2")
            .cancellationNo(2)
            .cancellationCode("cancellationCode2")
            .cancellationReasonDesc("cancellationReasonDesc2")
            .guaranteeCode("guaranteeCode2")
            .marketCode("marketCode2")
            .originOfBooking("originOfBooking2")
            .exchangeRate(2)
            .originalBaseRate(2)
            .baseRateAmount(2)
            .rateAmount(2)
            .roomCost(2)
            .quantity(2)
            .adults(2)
            .children(2)
            .physicalQuantity(2)
            .allotmentHeaderId(2)
            .dayUseYn("dayUseYn2")
            .dueOutYn("dueOutYn2")
            .insertUser(2)
            .updateUser(2)
            .insertActionInstanceId(2)
            .dmlSeqNo(2)
            .extSeqNo(2)
            .extSegNo(2)
            .cribs(2)
            .extraBeds(2)
            .allotmentRecordType("allotmentRecordType2")
            .blockResort("blockResort2")
            .blockId(2)
            .turndownStatus("turndownStatus2")
            .awdUpgrFrom("awdUpgrFrom2")
            .awdUpgrTo("awdUpgrTo2")
            .hkExpectedServiceTime("hkExpectedServiceTime2")
            .roomInstructions("roomInstructions2");
    }

    public static ReservationDailyElements getReservationDailyElementsRandomSampleGenerator() {
        return new ReservationDailyElements()
            .id(longCount.incrementAndGet())
            .resort(UUID.randomUUID().toString())
            .resvDailyElSeq(intCount.incrementAndGet())
            .resvStatus(UUID.randomUUID().toString())
            .externalReference(UUID.randomUUID().toString())
            .roomClass(UUID.randomUUID().toString())
            .roomCategory(UUID.randomUUID().toString())
            .bookedRoomCategory(UUID.randomUUID().toString())
            .room(UUID.randomUUID().toString())
            .cancellationNo(intCount.incrementAndGet())
            .cancellationCode(UUID.randomUUID().toString())
            .cancellationReasonDesc(UUID.randomUUID().toString())
            .guaranteeCode(UUID.randomUUID().toString())
            .marketCode(UUID.randomUUID().toString())
            .originOfBooking(UUID.randomUUID().toString())
            .exchangeRate(intCount.incrementAndGet())
            .originalBaseRate(intCount.incrementAndGet())
            .baseRateAmount(intCount.incrementAndGet())
            .rateAmount(intCount.incrementAndGet())
            .roomCost(intCount.incrementAndGet())
            .quantity(intCount.incrementAndGet())
            .adults(intCount.incrementAndGet())
            .children(intCount.incrementAndGet())
            .physicalQuantity(intCount.incrementAndGet())
            .allotmentHeaderId(intCount.incrementAndGet())
            .dayUseYn(UUID.randomUUID().toString())
            .dueOutYn(UUID.randomUUID().toString())
            .insertUser(intCount.incrementAndGet())
            .updateUser(intCount.incrementAndGet())
            .insertActionInstanceId(intCount.incrementAndGet())
            .dmlSeqNo(intCount.incrementAndGet())
            .extSeqNo(intCount.incrementAndGet())
            .extSegNo(intCount.incrementAndGet())
            .cribs(intCount.incrementAndGet())
            .extraBeds(intCount.incrementAndGet())
            .allotmentRecordType(UUID.randomUUID().toString())
            .blockResort(UUID.randomUUID().toString())
            .blockId(intCount.incrementAndGet())
            .turndownStatus(UUID.randomUUID().toString())
            .awdUpgrFrom(UUID.randomUUID().toString())
            .awdUpgrTo(UUID.randomUUID().toString())
            .hkExpectedServiceTime(UUID.randomUUID().toString())
            .roomInstructions(UUID.randomUUID().toString());
    }
}
