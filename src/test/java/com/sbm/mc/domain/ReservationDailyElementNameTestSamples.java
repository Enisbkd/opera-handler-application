package com.sbm.mc.domain;

import java.util.Random;
import java.util.UUID;
import java.util.concurrent.atomic.AtomicInteger;
import java.util.concurrent.atomic.AtomicLong;

public class ReservationDailyElementNameTestSamples {

    private static final Random random = new Random();
    private static final AtomicLong longCount = new AtomicLong(random.nextInt() + (2 * Integer.MAX_VALUE));
    private static final AtomicInteger intCount = new AtomicInteger(random.nextInt() + (2 * Short.MAX_VALUE));

    public static ReservationDailyElementName getReservationDailyElementNameSample1() {
        return new ReservationDailyElementName()
            .id(1L)
            .resort("resort1")
            .resvNameId(1)
            .resvDailyElSeq(1)
            .travelAgentId(1)
            .companyId(1)
            .sourceId(1)
            .groupId(1)
            .sharePaymentType("sharePaymentType1")
            .adults(1)
            .children(1)
            .discountReasonCode("discountReasonCode1")
            .fixedRateYn("fixedRateYn1")
            .sharePriority(1)
            .insertUser(1)
            .updateUser(1)
            .lastShareCalculation("lastShareCalculation1")
            .insertActionInstanceId(1)
            .dmlSeqNo(1)
            .adultsTaxFree(1)
            .childrenTaxFree(1)
            .children1(1)
            .children2(1)
            .children3(1)
            .rateCode("rateCode1")
            .currencyCode("currencyCode1")
            .exchangePostingType("exchangePostingType1")
            .membershipPoints(1)
            .children4(1)
            .children5(1)
            .commissionCode("commissionCode1")
            .awardCode1("awardCode11")
            .awardCode2("awardCode21")
            .awardCode3("awardCode31")
            .awardCode4("awardCode41")
            .awardCode5("awardCode51")
            .awardVoucher1("awardVoucher11")
            .awardVoucher2("awardVoucher21")
            .awardVoucher3("awardVoucher31")
            .awardVoucher4("awardVoucher41")
            .awardVoucher5("awardVoucher51")
            .doNotMoveYn("doNotMoveYn1")
            .awardCode("awardCode1")
            .points(1)
            .pointsEligibilityCode("pointsEligibilityCode1")
            .resvContactId(1)
            .billingContactId(1)
            .referralYn("referralYn1")
            .bxgyDiscountYn("bxgyDiscountYn1")
            .commissionableYn("commissionableYn1")
            .basedOnRule("basedOnRule1");
    }

    public static ReservationDailyElementName getReservationDailyElementNameSample2() {
        return new ReservationDailyElementName()
            .id(2L)
            .resort("resort2")
            .resvNameId(2)
            .resvDailyElSeq(2)
            .travelAgentId(2)
            .companyId(2)
            .sourceId(2)
            .groupId(2)
            .sharePaymentType("sharePaymentType2")
            .adults(2)
            .children(2)
            .discountReasonCode("discountReasonCode2")
            .fixedRateYn("fixedRateYn2")
            .sharePriority(2)
            .insertUser(2)
            .updateUser(2)
            .lastShareCalculation("lastShareCalculation2")
            .insertActionInstanceId(2)
            .dmlSeqNo(2)
            .adultsTaxFree(2)
            .childrenTaxFree(2)
            .children1(2)
            .children2(2)
            .children3(2)
            .rateCode("rateCode2")
            .currencyCode("currencyCode2")
            .exchangePostingType("exchangePostingType2")
            .membershipPoints(2)
            .children4(2)
            .children5(2)
            .commissionCode("commissionCode2")
            .awardCode1("awardCode12")
            .awardCode2("awardCode22")
            .awardCode3("awardCode32")
            .awardCode4("awardCode42")
            .awardCode5("awardCode52")
            .awardVoucher1("awardVoucher12")
            .awardVoucher2("awardVoucher22")
            .awardVoucher3("awardVoucher32")
            .awardVoucher4("awardVoucher42")
            .awardVoucher5("awardVoucher52")
            .doNotMoveYn("doNotMoveYn2")
            .awardCode("awardCode2")
            .points(2)
            .pointsEligibilityCode("pointsEligibilityCode2")
            .resvContactId(2)
            .billingContactId(2)
            .referralYn("referralYn2")
            .bxgyDiscountYn("bxgyDiscountYn2")
            .commissionableYn("commissionableYn2")
            .basedOnRule("basedOnRule2");
    }

    public static ReservationDailyElementName getReservationDailyElementNameRandomSampleGenerator() {
        return new ReservationDailyElementName()
            .id(longCount.incrementAndGet())
            .resort(UUID.randomUUID().toString())
            .resvNameId(intCount.incrementAndGet())
            .resvDailyElSeq(intCount.incrementAndGet())
            .travelAgentId(intCount.incrementAndGet())
            .companyId(intCount.incrementAndGet())
            .sourceId(intCount.incrementAndGet())
            .groupId(intCount.incrementAndGet())
            .sharePaymentType(UUID.randomUUID().toString())
            .adults(intCount.incrementAndGet())
            .children(intCount.incrementAndGet())
            .discountReasonCode(UUID.randomUUID().toString())
            .fixedRateYn(UUID.randomUUID().toString())
            .sharePriority(intCount.incrementAndGet())
            .insertUser(intCount.incrementAndGet())
            .updateUser(intCount.incrementAndGet())
            .lastShareCalculation(UUID.randomUUID().toString())
            .insertActionInstanceId(intCount.incrementAndGet())
            .dmlSeqNo(intCount.incrementAndGet())
            .adultsTaxFree(intCount.incrementAndGet())
            .childrenTaxFree(intCount.incrementAndGet())
            .children1(intCount.incrementAndGet())
            .children2(intCount.incrementAndGet())
            .children3(intCount.incrementAndGet())
            .rateCode(UUID.randomUUID().toString())
            .currencyCode(UUID.randomUUID().toString())
            .exchangePostingType(UUID.randomUUID().toString())
            .membershipPoints(intCount.incrementAndGet())
            .children4(intCount.incrementAndGet())
            .children5(intCount.incrementAndGet())
            .commissionCode(UUID.randomUUID().toString())
            .awardCode1(UUID.randomUUID().toString())
            .awardCode2(UUID.randomUUID().toString())
            .awardCode3(UUID.randomUUID().toString())
            .awardCode4(UUID.randomUUID().toString())
            .awardCode5(UUID.randomUUID().toString())
            .awardVoucher1(UUID.randomUUID().toString())
            .awardVoucher2(UUID.randomUUID().toString())
            .awardVoucher3(UUID.randomUUID().toString())
            .awardVoucher4(UUID.randomUUID().toString())
            .awardVoucher5(UUID.randomUUID().toString())
            .doNotMoveYn(UUID.randomUUID().toString())
            .awardCode(UUID.randomUUID().toString())
            .points(intCount.incrementAndGet())
            .pointsEligibilityCode(UUID.randomUUID().toString())
            .resvContactId(intCount.incrementAndGet())
            .billingContactId(intCount.incrementAndGet())
            .referralYn(UUID.randomUUID().toString())
            .bxgyDiscountYn(UUID.randomUUID().toString())
            .commissionableYn(UUID.randomUUID().toString())
            .basedOnRule(UUID.randomUUID().toString());
    }
}
